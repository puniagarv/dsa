// simpl recursion and backtracking 
//code
class Solution {
public:
    
    void sol(int i,unordered_map<char,string>&mp,
             string s,string digits,vector<string>&ans)
    {
      if(i==digits.size())
      {
        ans.push_back(s);
        return;
      }
     
      string temp=mp[digits[i]];
      
      for(int j=0;j<temp.size();j++)
      {
          s.push_back(temp[j]);
          sol(i+1,mp,s,digits,ans);
          s.pop_back();
      }

    }
    
    vector<string> letterCombinations(string digits) {
        unordered_map<char,string>mp;
        if(digits.size()==0)return {};
        mp['2']="abc";
        mp['3']="def";
        mp['4']="ghi";
        mp['5']="jkl";
        mp['6']="mno";
        mp['7']="pqrs";
        mp['8']="tuv";
        mp['9']="wxyz";

       vector<string>ans;
       string s;
       sol(0,mp,s,digits,ans);

       return ans;

    }
};
