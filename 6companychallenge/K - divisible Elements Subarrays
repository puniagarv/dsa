/*
simply by using simple maths
approach ---
first make possible subarray then make dry 
create a set which store the unique vector
t.c 0(n^2) and s.c o(n*n)
*/

//code
class Solution {
public:
    int countDistinct(vector<int>& nums, int k, int p) {
        
        int n=nums.size();
        set<vector<int>>s;

        for(int i=0;i<n;i++)
        {
            vector<int>v;
            int count=0;
            int temp=0;

            for(int j=i;j<n;j++)
            {
                if(nums[j]%p==0)
                temp++;
                
                if(temp <= k)
                {   
                    v.push_back(nums[j]);
                }
                s.insert(v);
            }
        }
        
        // for(auto it :s)
        // {
        //     for(auto i:it)
        //     {
        //         cout<<i<<" ";
        //     }
        //     cout<<endl;
        // }

        return s.size();

    }
};
