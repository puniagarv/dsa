/*using the priority queue* using heap/


class Solution {
public:

    vector<int> maxSubsequence(vector<int>& nums, int k) 
    {
       
        priority_queue <pair<int,int>, vector<pair<int,int>>, greater<pair<int,int>>>pq;

        for(int i=0;i<nums.size();i++)
        {
           pq.push({nums[i],i});
           if(pq.size() > k)pq.pop();

        }

        vector<int>v(nums.size(),INT_MIN);

        while(!pq.empty())
        {
          auto it=pq.top();
          pq.pop();
          v[it.second]=it.first;
        }

        vector<int>ans;
       for(auto it:v)
       {
           if(it!=INT_MIN)
           ans.push_back(it);
       }
       return ans;
    }
};
