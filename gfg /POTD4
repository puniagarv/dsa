class Solution{
    public:
        
    // A[]: input array
    // N: size of array
    // Function to find the maximum index difference.
    int maxIndexDiff(int s[], int n) 
    { 
        // Your code here                           // create a prefix array which store the minimum element fron the left
                                                    // create a suffix array which store the maximum element from the  right   
                                                   // then iterate over these array to find the maximum index.
        
       vector<int>leftmin(n,0),rightmax(n,0);
       
       leftmin[0] = s[0];
       
       for(int i = 1 ; i < n ; i++)
       {
           leftmin[i] = min(leftmin[i-1],s[i]);
       }
       
        rightmax[n-1] = s[n-1];
        
       for(int i = n-2 ; i >= 0 ; i--)
       {
         rightmax[i]=max(rightmax[i+1],s[i]);   
       }
       
       int left=0,right=0,ans = -1;
       
       while(left < n && right < n)
       {
           if(leftmin[left] <= rightmax[right])
           {
               ans = max(ans,right - left);
               right++;
           }
           else
           left++;
           
          
       }
       
       return ans;
       
    }
};

//{ Driver Code Starts.
  
/* Driver program to test above functions */
int main() 
{
    int T;
    //testcases
    cin>>T;
    while(T--){
        int num;
        //size of array
        cin>>num;
        int arr[num];
        
        //inserting elements
        for (int i = 0; i<num; i++)
            cin>>arr[i];
        Solution ob;
        
        //calling maxIndexDiff() function
        cout<<ob.maxIndexDiff(arr, num)<<endl;    
        
    }
    return 0;
} 
// } Driver Code Ends
