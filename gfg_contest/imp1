//{ Driver Code Starts
#include<bits/stdc++.h>
using namespace std;


class Array
{
public:
    template <class T>
    static void input(vector<T> &A,int n)
    {
        for (int i = 0; i < n; i++)
        {
            scanf("%d ",&A[i]);
        }
    }

    template <class T>
    static void print(vector<T> &A)
    {
        for (int i = 0; i < A.size(); i++)
        {
            cout << A[i] << " ";
        }
        cout << endl;
    }
};


// } Driver Code Ends

class Solution {
  public:
  
    int maxScoreSubseq(int n, vector<int> &arr)
    {
        // code here
        
       unordered_map<int,int>mp;
       
       // take main focus on the arangement of condition
       
      int maxi=INT_MIN;
       
       for(int i= 0 ; i < n ;i++)
       {   
           if(arr[i] > 0)
           mp[arr[i]-i]+=arr[i];
           
           maxi = max(maxi,arr[i]);
       }
       
       int ans = INT_MIN;
       
       for(auto it : mp)
       {
           ans = max(ans,it.second);
       }
       
        if(mp.size()==0)return maxi;
        return ans;
        
    }
   
};


//{ Driver Code Starts.

int main(){
    int t;
    scanf("%d ",&t);
    while(t--){
        
        int n;
        scanf("%d",&n);
        
        
        vector<int> arr(n);
        Array::input(arr,n);
        
        Solution obj;
        int res = obj.maxScoreSubseq(n, arr);
        
        cout<<res<<endl;
        
    }
}

// } Driver Code Ends
